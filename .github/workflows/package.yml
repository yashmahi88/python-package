name: Package and Upload

on:
    workflow_call:
      inputs:
        LANGUAGE:
          description: "Programming Language to Package"
          required: true
          type: string

jobs:
  package:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  
  
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: build-artifact
          path: ./downloaded-artifacts
      - name: Verify contents of downloaded artifact
        run: |
            echo "Listing contents of downloaded artifacts:"
            ls -R ./downloaded-artifacts
            cat  ./downloaded-artifacts/package_info.txt

      - name: Extract PACKAGE_ID and PACKAGE_VERSION
        run: |
              # Correct patterns to match the actual file content
              PACKAGE_ID=$(grep "PACKAGE_ID:" ./downloaded-artifacts/package_info.txt | cut -d ':' -f2 | xargs)
              PACKAGE_VERSION=$(grep "PACKAGE_VERSION:" ./downloaded-artifacts/package_info.txt | cut -d ':' -f2 | xargs)
    
              echo "PACKAGE_ID=${PACKAGE_ID}"
              echo "PACKAGE_VERSION=${PACKAGE_VERSION}"
    
              # Optionally set them as environment variables for further steps
              echo "PACKAGE_ID=${PACKAGE_ID}" >> $GITHUB_ENV
              echo "PACKAGE_VERSION=${PACKAGE_VERSION}" >> $GITHUB_ENV

      - name: Pack project
        run: |
          echo "Packaging with version: $PACKAGE_VERSION"
          if [[ "${{ inputs.LANGUAGE }}" == "dotnet" ]]; then
            dotnet pack --configuration Release --output ./bin/Release /p:CustomPackageId=$PACKAGE_ID /p:PackageVersion=$PACKAGE_VERSION
            ARTIFACT_PATH="./bin/Release/${PACKAGE_ID}.${PACKAGE_VERSION}.nupkg"
          elif [[ "${{ inputs.LANGUAGE }}" == "java" ]]; then
            mvn package \
              -Dpackage.id=${{ env.PACKAGE_ID }} \
              -Dpackage.version=${{ env.PACKAGE_VERSION }}

            ARTIFACT_PATH="./target/${PACKAGE_ID}-${PACKAGE_VERSION}.jar"
          elif [[ "${{ inputs.LANGUAGE }}" == "python" ]]; then
            python setup.py sdist
            ARTIFACT_PATH="./dist/${PACKAGE_ID}-${PACKAGE_VERSION}.tar.gz"
          elif [[ "${{ inputs.LANGUAGE }}" == "kotlin" ]]; then
            gradle build
            ARTIFACT_PATH="./build/libs/${PACKAGE_ID}-${PACKAGE_VERSION}.jar"
          elif [[ "${{ inputs.LANGUAGE }}" == "react" || "${{ inputs.LANGUAGE }}" == "javascript" ]]; then
            npm run build
            ARTIFACT_PATH="./build/${PACKAGE_ID}-${PACKAGE_VERSION}.tar.gz"
          fi
          echo "ARTIFACT_PATH=${ARTIFACT_PATH}" >> $GITHUB_ENV

   
      - name: Upload Package as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: nuget-package
          path: ${{ env.ARTIFACT_PATH }}