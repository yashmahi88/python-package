name: Setup and Build Package

on:
  workflow_call:
    inputs:
      LANGUAGE:
        description: "Programming Language to Package"
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  

      - name: Set up environment based on LANGUAGE
        id: setup_language
        run: |
          echo "LANGUAGE=${{ inputs.LANGUAGE }}"
          echo "Setting up environment for ${{ inputs.LANGUAGE }}"

          if [[ "${{ inputs.LANGUAGE }}" == "dotnet" ]]; then
            echo "Setting up .NET"
            sudo apt-get install -y dotnet-sdk-8.0
          elif [[ "${{ inputs.LANGUAGE }}" == "java" ]]; then
            echo "Setting up Java"
            sudo apt-get install -y openjdk-11-jdk 
          elif [[ "${{ inputs.LANGUAGE }}" == "react" || "${{ inputs.LANGUAGE }}" == "node" ]]; then
            echo "Setting up Node.js"
            curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
            sudo apt-get install -y nodejs
          else
            echo "Language not supported!"
            exit 1
          fi
      - name: Set package name and version
        id: set_name
        run: |
            echo "Checking GITHUB_REF: $GITHUB_REF"
            FOLDER_NAME="nexus-git-development"
  
            if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
              TAG_NAME="${GITHUB_REF#refs/tags/}"
              git fetch origin master
              MASTER_COMMIT=$(git rev-parse origin/master)
              TAG_COMMIT=$(git rev-parse "${GITHUB_REF}")
              if [[ "$TAG_COMMIT" == "$MASTER_COMMIT" ]]; then
                export PACKAGE_ID="nexus-git-${TAG_NAME}"
                export PACKAGE_VERSION="${TAG_NAME}"
              else
                echo "Error: Tags must be created on the master branch."
                exit 1
              fi
            elif [[ "${GITHUB_REF}" == "refs/heads/development" ]]; then
              export PACKAGE_ID="${FOLDER_NAME}.nexus-git"
              export PACKAGE_VERSION="1.0.0-${GITHUB_RUN_ID}"
            elif [[ "${GITHUB_REF}" == "refs/heads/release" ]]; then
              COMMIT_ID=$(echo "${GITHUB_SHA}" | cut -c1-6)
              export PACKAGE_ID="nexus-git-1.0.0-release-${COMMIT_ID}"
              export PACKAGE_VERSION="1.0.0-release-${COMMIT_ID}"
            elif [[ "${GITHUB_REF}" == "refs/heads/master" ]]; then
              exit 1
            fi 
  
            echo "PACKAGE_ID=${PACKAGE_ID}" >> $GITHUB_ENV
            echo "PACKAGE_VERSION=${PACKAGE_VERSION}" >> $GITHUB_ENV

      - name: Build project
        run: |
            if [[ "${{ inputs.LANGUAGE }}" == "dotnet" ]]; then
              dotnet build --configuration Release
            elif [[ "${{ inputs.LANGUAGE }}" == "java" ]]; then
            #    mvn clean package \
            #     -Dpackage.id=${{ env.PACKAGE_ID }} \
            #     -Dpackage.version=${{ env.PACKAGE_VERSION }}
              echo "Skipping build "
            elif [[ "${{ inputs.LANGUAGE }}" == "react" || "${{ inputs.LANGUAGE }}" == "node" ]]; then
              # npm run build
              echo "Skipping build "
            fi



      - name: Create a package
        run: |
          mkdir -p build
          echo "PACKAGE_ID: $PACKAGE_ID" > build/package_info.txt
          echo "PACKAGE_VERSION: $PACKAGE_VERSION" >> build/package_info.txt
          # Add other commands to create the actual package, if applicable.

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: build/ 

